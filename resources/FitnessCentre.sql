CREATE DATABASE IF NOT EXISTS fitness_centre_java DEFAULT CHARACTER SET 'utf8';
USE fitness_centre_java;
CREATE TABLE IF NOT EXISTS trainer(id Int UNSIGNED NOT NULL AUTO_INCREMENT, full_name Varchar(255) NOT NULL, birth_date Date NOT NULL, passp_no Varchar(255) NOT NULL, authority Varchar(255) NOT NULL, issue_date Date NOT NULL, sex ENUM('М', 'Ж', 'Мужской', 'Женский', 'M', 'F', 'Male', 'Female') NOT NULL,	PRIMARY KEY(id));
ALTER TABLE trainer ADD CONSTRAINT chk_passp_date CHECK (birth_date < passp_date);
INSERT INTO trainer(full_name, birth_date, passp_no, authority, issue_date, sex) VALUES('Васильева Анна Константиновна', '1985-11-19.', '2001 784255', 'Железнодорожным РОВД г. Воронежа', '2001-02-06', 'Женский'),('Фурсова Евгения Александровна', '1990-08-28', '2004 318220', 'Ленинским РОВД г. Воронежа', '2004-09-14', 'Женский'),('Лисовский Ярослав Владимирович', '1978-05-17', '2001 564093', 'Центральным РОВД г. Воронежа', '2001-11-26', 'Мужской'),('Поворин Андрей Сергеевич', '1986-08-03', '2001 834216', 'Семилукским РОВД Воронежской области', '2001-01-18', 'Мужской'),('Андреева Софья Васильевна', '1991-02-15', '2004 634552', 'Железнодорожным РОВД г. Воронежа', '2004-07-23', 'Женский'),('Воронина Татьяна Эдуардовна', '1977-11-26', '2001 451788', 'Советским РОВД г. Воронежа', '2001-06-16', 'Женский');
CREATE TABLE IF NOT EXISTS type_of_training( id Int UNSIGNED NOT NULL AUTO_INCREMENT,	tt_name Varchar(255) NOT NULL, duration Decimal(3,2) NOT NULL, PRIMARY KEY(id));
INSERT INTO type_of_training(tt_name, duration) VALUES('Хореография', 1.5),('Пилатес', 1.5),('Йога', 1.25),('Аэробика', 1.25),('Силовые и кардио нагрузки', 2.00);
CREATE TABLE IF NOT EXISTS trainer_spec(id Int UNSIGNED NOT NULL AUTO_INCREMENT, trainer_id Int UNSIGNED NOT NULL, tt_id Int UNSIGNED NOT NULL, PRIMARY KEY(id));
ALTER TABLE trainer_spec ADD CONSTRAINT fk_trainer_spec_trainer_id FOREIGN KEY(trainer_id) REFERENCES trainer(id);
ALTER TABLE trainer_spec ADD CONSTRAINT fk_trainer_spec_tt_id FOREIGN KEY(tt_id) REFERENCES type_of_training(id);
INSERT INTO trainer_spec(trainer_id, tt_id) VALUES(5, 4), (1, 2), (1, 3), (3, 5), (4, 5), (2, 1), (6, 1);
CREATE TABLE IF NOT EXISTS conditioner(id Tinyint UNSIGNED NOT NULL AUTO_INCREMENT, availability ENUM('да', 'нет') NOT NULL UNIQUE, PRIMARY KEY(id));
INSERT INTO conditioner(availability) VALUES('да'), ('нет');
CREATE TABLE gym(id Int UNSIGNED NOT NULL AUTO_INCREMENT, gym_number Int(3) NOT NULL, area Decimal(6,2) NOT NULL, cover Varchar(255) NOT NULL, cond_id Tinyint UNSIGNED NOT NULL, capacity Smallint NOT NULL, PRIMARY KEY(id));
ALTER TABLE gym ADD CONSTRAINT fk_gym_conditioner_id FOREIGN KEY(cond_id) REFERENCES conditioner(id);
ALTER TABLE gym ADD CONSTRAINT chk_area CHECK (area > 0);
ALTER TABLE gym ADD CONSTRAINT chk_capacity CHECK (capacity > 0);
ALTER TABLE gym ADD CONSTRAINT chk_capacity_area CHECK (capacity < 1/5*area);
INSERT INTO gym(gym_number, area, cover, cond_id, capacity) VALUES(101, 135, 'специальное', 2, 20),(102, 146, 'паркет', 2, 20),(201, 100, 'паркет', 2, 15),(202, 125, 'ковровое', 2, 15);
CREATE TABLE stock(id Int UNSIGNED NOT NULL AUTO_INCREMENT, stock_name Varchar(255) NOT NULL, PRIMARY KEY(id)); 
INSERT INTO stock(stock_name) VALUES('маты'), ('тренажеры'), ('коврики'), ('отсутствует');
CREATE TABLE gym_equipment(id Int UNSIGNED NOT NULL AUTO_INCREMENT, gym_id Int UNSIGNED NOT NULL, stock_id Int UNSIGNED NOT NULL, stock_quantity Smallint NULL, PRIMARY KEY(id));
ALTER TABLE gym_equipment ADD CONSTRAINT fk_gym_equipment_gym_id FOREIGN KEY(gym_id) REFERENCES gym(id);
ALTER TABLE gym_equipment ADD CONSTRAINT fk_gym_quipment_stock_id FOREIGN KEY(stock_id) REFERENCES stock(id);
INSERT INTO gym_equipment(gym_id, stock_id, stock_quantity) VALUES(1, 1, 6), (2, 2, 10), (3, 4, NULL), (4, 3, 6);
CREATE TABLE schedule(id Int UNSIGNED NOT NULL AUTO_INCREMENT, trainer_id Int UNSIGNED NOT NULL, gym_id Int UNSIGNED NOT NULL, tt_id Int UNSIGNED NOT NULL, day_of_week ENUM('Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье') NOT NULL, start_time Time NOT NULL, end_time Time NOT NULL, PRIMARY KEY(id));
ALTER TABLE schedule ADD CONSTRAINT fk_schedule_tt_id FOREIGN KEY(tt_id) REFERENCES type_of_training(id);
ALTER TABLE schedule ADD CONSTRAINT fk_schedule_trainer_id FOREIGN KEY(trainer_id) REFERENCES trainer(id);
ALTER TABLE schedule ADD CONSTRAINT fk_schedule_gym_id FOREIGN KEY(gym_id) REFERENCES gym(id);
CREATE FUNCTION calculate_end_time(tt_id Int, start_time Time) RETURNS Time BEGIN DECLARE seconds Int; DECLARE decimal_time Decimal(3,2); DECLARE f_end_time Time; SELECT type_of_training.duration INTO decimal_time FROM type_of_training WHERE type_of_training.id = tt_id; SET seconds = decimal_time*3600;	SELECT SEC_TO_TIME(TIME_TO_SEC(start_time) + seconds) INTO f_end_time; RETURN f_end_time; END
INSERT INTO schedule(trainer_id, gym_id, tt_id, day_of_week, start_time, end_time) VALUES(1, 4, 2, 'Понедельник', '18:00', calculate_end_time(2, '18:00')),(1, 2, 3, 'Среда','19:00', calculate_end_time(3, '19:00')),(2, 3, 1, 'Вторник', '17:00', calculate_end_time(1, '17:00')),(3, 1, 5, 'Понедельник', '19:00', calculate_end_time(5, '19:00')),(4, 1, 5, 'Пятница', '19:00', calculate_end_time(5, '19:00')),(5, 2, 4, 'Четверг', '18:00', calculate_end_time(4, '18:00')),(6, 3, 1, 'Пятница', '17:00', calculate_end_time(1, '17:00'));